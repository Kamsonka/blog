<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>PLOTy i Ploteczki</title>
    <link>/</link>
    <description>Recent content on PLOTy i Ploteczki</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Wed, 01 Nov 2017 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Wykres ceny masła</title>
      <link>/2017/11/01/wykres-ceny-mas%C5%82a/</link>
      <pubDate>Wed, 01 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>/2017/11/01/wykres-ceny-mas%C5%82a/</guid>
      <description>Dane można pozyskać ze strony: https://bdl.stat.gov.pl/BDL/start Ja wybrałam ceny masła po miesiącach w latach 2006 - 2017
Wczytuję pobrane dane funkcją read_csv2() z pakietu readr. U mnie wyglądają one tak:
library(dplyr) head(as.data.frame(ceny.masla)) ## Kod Nazwa Miesiące ## 1 0000000 POLSKA styczeń ## 2 0000000 POLSKA styczeń ## 3 0000000 POLSKA styczeń ## 4 0000000 POLSKA styczeń ## 5 0000000 POLSKA styczeń ## 6 0000000 POLSKA styczeń ## Rodzaje towarów i usług Cena i wskaźniki ## 1 masło świeże o zawartości tłuszczu ok.</description>
    </item>
    
    <item>
      <title>Tytuły osi i wykresu</title>
      <link>/2017/10/04/tytu%C5%82y-osi-i-wykresu/</link>
      <pubDate>Wed, 04 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>/2017/10/04/tytu%C5%82y-osi-i-wykresu/</guid>
      <description>startujemy z ‘gołym’ wykresem library(ggplot2) x = rnorm(n = 1000, mean = 50) plot = ggplot() + geom_histogram(aes(x), bins = 50) plot Jak dodać tytuł do wykresu w ggplot? plot + ggtitle(label = &amp;#39;Tytuł wykresu&amp;#39;, subtitle = &amp;#39;Podtytuł wykresu&amp;#39;)  Jak dodać/zmienić tytuł osi x i y? plot + xlab(&amp;#39;Tytuł osi x&amp;#39;) + ylab(&amp;#39;Tytuł osi y&amp;#39;) To samo można zrobić przy zastosowaniiu jednej funkcji: plot + labs(title= &amp;#39;Tytuł wykresu&amp;#39;, subtitle = &amp;#39;Podtytuł wykresu&amp;#39;, x = &amp;#39;Tytuł osi x&amp;#39;, y = &amp;#39;Tytuł osi y&amp;#39;) ### Jak dodać podpis (caption) pod wykresem?</description>
    </item>
    
    <item>
      <title>geom_line</title>
      <link>/2017/10/04/geom_line/</link>
      <pubDate>Wed, 04 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>/2017/10/04/geom_line/</guid>
      <description>geom_line, czyli nic innego jak wykres liniowy library(lubridate) library(ggplot2) Tworzę tabelę z danymi
df = data.frame(day = ymd(&amp;#39;2016-01-01&amp;#39;) + 0:364, value = runif(n = 365, min = 0, max = 150 )) head(df) ## day value ## 1 2016-01-01 149.574908 ## 2 2016-01-02 1.329964 ## 3 2016-01-03 25.228415 ## 4 2016-01-04 27.680103 ## 5 2016-01-05 140.042718 ## 6 2016-01-06 113.048283 Malujemy wykres :)
ggplot(df, aes(x = day, y = value)) + geom_line() Możemy zmienić kolor linii, wielkość oraz typ lini:</description>
    </item>
    
    <item>
      <title>geom_bar</title>
      <link>/2017/10/03/geom_bar/</link>
      <pubDate>Tue, 03 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>/2017/10/03/geom_bar/</guid>
      <description>Hej! Zanim rozpoczniemy przygodę z ggplot potrzebujemy wczytac bilbioteki i dane na których będziemy pracować.
library(ggplot2) library(datasets) Z pakietu datasets wybieram dane ‘women’ pokazujące wysokość i wagę kobiet w wieku 30-39 lat.
datasets::women ## height weight ## 1 58 115 ## 2 59 117 ## 3 60 120 ## 4 61 123 ## 5 62 126 ## 6 63 129 ## 7 64 132 ## 8 65 135 ## 9 66 139 ## 10 67 142 ## 11 68 146 ## 12 69 150 ## 13 70 154 ## 14 71 159 ## 15 72 164 Pierwszy wykres!</description>
    </item>
    
    <item>
      <title>geom_point</title>
      <link>/2017/10/03/geom_point/</link>
      <pubDate>Tue, 03 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>/2017/10/03/geom_point/</guid>
      <description>Wykres punktowy jest jeszcze prostszy od wykresu słupkowego.
library(ggplot2) library(datasets) Początek jest zawsze ten sam: ggplot() Funkcja która rysuje kropki na wykresie to geom_point()
ggplot(data = women, aes(x = height, y = weight)) + geom_point() Dodatkowymi argumentami geom_point mogą być: kształt, kolor, wielkość.
Kolor ggplot(data = women, aes(x = height, y = weight)) + geom_point(color = &amp;#39;#0099CC&amp;#39;)  Rodzaje punktorów i wielkość ggplot(data = women, aes(x = height, y = weight)) + geom_point(shape = 17, color = &amp;#39;#0099CC&amp;#39;, size = 4)  </description>
    </item>
    
    <item>
      <title>O blogu</title>
      <link>/about/</link>
      <pubDate>Sun, 10 Sep 2017 21:48:51 -0700</pubDate>
      
      <guid>/about/</guid>
      <description>Blog poświęcony jest programowaniu w R. Głownym tematem będzie wizualizacja danych w R przy użyciu pakietu ggplot2, a być może również plotly w niedalekiej przyszłości. W tak zwanym międzyczasie postaram się wrzucać drobne analizy oraz przydatne pakiety ;)</description>
    </item>
    
    <item>
      <title>GGPLOT2 Spis treści</title>
      <link>/ggplot2/</link>
      <pubDate>Sun, 10 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>/ggplot2/</guid>
      <description>Rodzaje wykresów  geom_bar geom_boxplot geom_density geom_dotplot geom_hex geom_jitter geom_map geom_abline geom_point geom_ribbon geom_smooth geom_area geom_freqpoly geom_histogram geom_quantile geom_rug geom_col geom_violin geom_line geom_step geom_crossbar geom_errorbar geom_linerange geom_pointrange   Doprecyzowanie wykresu  stat position grupowanie po color, fill,shape, size, linetype, group grupowanie po facet_ przekształcenie coord_ scale   Napisy  geom_text geom_label annotation tytuły i podpisy   Theme  tytuły osie x i y legenda panel wykresu guides   Typowe probemy  Kolejność elementów wykresu   </description>
    </item>
    
    <item>
      <title>Moje analizy</title>
      <link>/analizy/</link>
      <pubDate>Sun, 10 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>/analizy/</guid>
      <description> wykres cen masła w Polsce w latach 2006-2017 więcej wkrótce  </description>
    </item>
    
    <item>
      <title>Pakiety R&#39;owe Spis treści</title>
      <link>/packages/</link>
      <pubDate>Sun, 10 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>/packages/</guid>
      <description>Poniżej lista pakietów, które moim zdaniem każdy użytkownik R’a powinien znać:  dplyr tidyr (transformacja danych) lubridate (daty) ggplot2 (wykresy) readr (csv) stringr (operacje na stringach) devtools (ładowanie pakietów git’a) readxl (wczytywanie exceli) xlsx (wczytywanie exceli) openxlsx (wczytywanie exceli) purrr leaflet (wizualizacja na mapie) shiny (aplikacje web’owe) plotly (wykresy interaktywme) tm (text mmining) tidytext (text mining) rmarkdown (tworzenie notatek) httr (pobieranie zawatosci stron internetowych) rvest (scrapowanie) sendmailr (wysylka maili z R) tibble   </description>
    </item>
    
    <item>
      <title>Użyteczne źródła</title>
      <link>/sources/</link>
      <pubDate>Sun, 10 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>/sources/</guid>
      <description>GGplot  https://learnr.wordpress.com/2010/03/23/ggplot2-changing-the-default-order-of-legend-labels-and-stacking-of-data/ http://ggplot2.tidyverse.org/ http://www.cookbook-r.com/Graphs/   Kursy R’owe  http://www.pogromcydanych.icm.edu.pl/    Badania przy użyciu R  http://smarterpoland.pl/ http://prokulski.net/ http://szychtawdanych.pl/   Pomocne  https://www.r-bloggers.com/ https://www.rstudio.com/resources/cheatsheets/   </description>
    </item>
    
  </channel>
</rss>